logging_level: "INFO"
#logging_level: "DEBUG"
misp_servers:
  - domain: "https://your.misp.server/"
    api_key: "<API_key>j"
    verify_ssl: true
    debug: false 
    # misp.search() arguments
    args:
      enforce_warninglist: true
    periods:
      # Date in MISP DateRestSearchFilter format [S,M,h,d,w,m,Y] or timestamp %Y-%m-%d %H:%M:%S
      date: 30d
      # Tags -> None: search all / str: string to search / list: values to search (OR) / dict: {'OR': [list], 'NOT': [list], 'AND': [list]}
      tags:
        - ["tlp:clear"]

correlation:
  input_dir: /var/dnscollector/matches # use this if no files are defined from commmand line
  output_file: /var/dnscollector/alerts/matches.json
  archive_dir: /var/dnscollector/archive # use this as input for looking back
  alerts_database: /var/dnscollector/alerts_db.txt
  alerts_database_max_size: 300 #This is how many alerts we keep in the buffer before re-notifying  
  malicious_domains_file: /var/dnscollector/misp_domains.txt
  malicious_ips_file: /var/dnscollector/misp_ips.txt

alerting:
  # method: slack, mattermost, telegram or email
  slack: 
    hook: "https://hooks.slack.com/services/your_hook"
    template: "/etc/pdnssoccli/slack.template"
  mattermost: 
    hook: "https://hooks.mattermost.com/services/your_hook"
    template: "/etc/pdnssoccli/mattermost.template"
  telegram:
    telegram_bot_token: "0123456789:AAAAA-AAAAA-AAAAAAAAAAA_AAAAAAAAAAA"
    telegram_chat_id: "987654321"
#  email:
#    from: "security@your_org.net"
#    subject: "[pDNSSOC] your_org DNS alert"
#    summary_to: "me@your_org.net"
#    server: "localhost"
#   port: 25
#    template: /etc/pdnssoccli/alert_email.html
#    mappings:
#      - client_id: client_1
#        contact: client_1_sec_team@domain.tld

